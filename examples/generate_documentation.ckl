# Copyright (c) 2021 Damian Brunold, Gesundheitsdirektion Kanton ZÃ¼rich
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This extracts the documentation of the functions and
# writes it as a HTML file.

require sys;

for module in sys->checkerlang_modules do
    require module unqualified;
end;

def out = file_output("documentation/checkerlang_functions.html");

println("<html>", out);
println("<head>", out);
println("<title>CKL " + checkerlang_version + "-" + checkerlang_platform + " function ref</title>", out);
println("<style>", out);
println("h1 { font-family: Arial Black; font-height: 18pt; }", out);
println("h2 { font-family: Arial Black; font-height: 14pt; margin-top: 1.5em; }", out);
println("body { font-family: Arial; font-height: 11pt; max-width: 45em; margin: 0 auto; background-color: #222; color: #aaa; }", out);
println(".toc { list-style-type: none; column-count: 4; margin: 0; padding: 0; }", out);
println(".toc li { margin: 0; padding: 0; }", out);
println("a:link, a:active, a:hover, a:visited { text-decoration: none; color: #aaa; font-weight: bold;  }", out);
println(".examples_title { font-family: Arial Black; font-height: 10pt; padding-bottom: 0.3em; }", out);
println(".examples { padding: 0.5em 1em 1em 1 em; }", out);
println(".example { font-family: Courier New; font-height: 12pt; white-space: pre; }", out);
println("pre { font-family: Courier New; font-height: 12pt; white-space: pre; }", out);
println("</style>", out);
println("<link rel=\"shortcut icon\" type=\"image/png\" href=\"../img/ckl.png\">", out);
println("</head>", out);
println("<body>", out);
println("<h1>CKL " + checkerlang_version + "-" + checkerlang_platform + " function ref</h1>", out);

println("<h2>Table of contents</h2>", out);
println("<ul class='toc'>", out);
for symbol in ls() do
    def lines = split(info(eval(symbol)), //\n|\r\n//);
	if is_empty(lines) then continue;
    if first(lines) == "" then do lines = rest(lines); end;
    if lines is empty then continue;
    println("<li><a href='#" + symbol + "'>" + symbol + "</a></li>", out);
end;
println("</ul>", out);

for symbol in ls() do
    def lines = split(info(eval(symbol)), //\n|\r\n//);
	if is_empty(lines) then continue;
    if first(lines) == "" then do lines = rest(lines); end;
    if lines is empty then continue;
    println("<h2 id='" + symbol + "'>" + symbol + "</h2>", out);
    println("<pre>", out);
    def in_examples = FALSE;
    def in_header = TRUE;
    for line in lines do
        if str_starts_with(line, ":") then do
            if not in_examples then do
                println("<div class='examples'>", out);
                println("<div class='examples_title'>Examples:</div>", out);
                in_examples = TRUE;
            end;
            println("<div class='example'>" + esc(substr(line, 1) !> trim()) + "</div>", out);
        end else do
            if line == "" then do println("</pre><p>", out); in_header = FALSE; end
            else println(esc(line), out);
        end;
    end;
    if in_examples then print("</div>", out);
    println("</p>", out);
end;

println("</body>", out);
println("</html>", out);

close(out);
